# Generated by Django 5.0.11 on 2025-04-30 14:56

import smpp.pdu.pdu_types
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jasmin', '0002_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='address_npi',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrNpi['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrNpi['ISDN'], 'ISDN'), (smpp.pdu.pdu_types.AddrNpi['DATA'], 'Data'), (smpp.pdu.pdu_types.AddrNpi['TELEX'], 'Telex'), (smpp.pdu.pdu_types.AddrNpi['LAND_MOBILE'], 'Land Mobile'), (smpp.pdu.pdu_types.AddrNpi['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrNpi['PRIVATE'], 'Private'), (smpp.pdu.pdu_types.AddrNpi['ERMES'], 'Ermes'), (smpp.pdu.pdu_types.AddrNpi['INTERNET'], 'Internet'), (smpp.pdu.pdu_types.AddrNpi['WAP_CLIENT_ID'], 'WAP Client ID')], default=smpp.pdu.pdu_types.AddrNpi['ISDN'], help_text='Bind address NPI'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='address_ton',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrTon['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrTon['INTERNATIONAL'], 'International'), (smpp.pdu.pdu_types.AddrTon['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrTon['NETWORK_SPECIFIC'], 'Network Specific'), (smpp.pdu.pdu_types.AddrTon['SUBSCRIBER_NUMBER'], 'Subscriber Number'), (smpp.pdu.pdu_types.AddrTon['ALPHANUMERIC'], 'Alphanumeric'), (smpp.pdu.pdu_types.AddrTon['ABBREVIATED'], 'Abbreviated')], default=smpp.pdu.pdu_types.AddrTon['UNKNOWN'], help_text='Bind address TON'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='dest_addr_npi',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrNpi['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrNpi['ISDN'], 'ISDN'), (smpp.pdu.pdu_types.AddrNpi['DATA'], 'Data'), (smpp.pdu.pdu_types.AddrNpi['TELEX'], 'Telex'), (smpp.pdu.pdu_types.AddrNpi['LAND_MOBILE'], 'Land Mobile'), (smpp.pdu.pdu_types.AddrNpi['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrNpi['PRIVATE'], 'Private'), (smpp.pdu.pdu_types.AddrNpi['ERMES'], 'Ermes'), (smpp.pdu.pdu_types.AddrNpi['INTERNET'], 'Internet'), (smpp.pdu.pdu_types.AddrNpi['WAP_CLIENT_ID'], 'WAP Client ID')], default=smpp.pdu.pdu_types.AddrNpi['ISDN'], help_text='Destination address NPI'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='dest_addr_ton',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrTon['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrTon['INTERNATIONAL'], 'International'), (smpp.pdu.pdu_types.AddrTon['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrTon['NETWORK_SPECIFIC'], 'Network Specific'), (smpp.pdu.pdu_types.AddrTon['SUBSCRIBER_NUMBER'], 'Subscriber Number'), (smpp.pdu.pdu_types.AddrTon['ALPHANUMERIC'], 'Alphanumeric'), (smpp.pdu.pdu_types.AddrTon['ABBREVIATED'], 'Abbreviated')], default=smpp.pdu.pdu_types.AddrTon['INTERNATIONAL'], help_text='Destination address TON'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='priority_flag',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.PriorityFlag['LEVEL_0'], '0'), (smpp.pdu.pdu_types.PriorityFlag['LEVEL_1'], '1'), (smpp.pdu.pdu_types.PriorityFlag['LEVEL_2'], '2'), (smpp.pdu.pdu_types.PriorityFlag['LEVEL_3'], '3')], default=smpp.pdu.pdu_types.PriorityFlag['LEVEL_0'], help_text='SMS-MT default priority'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='registered_delivery',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.RegisteredDeliveryReceipt['NO_SMSC_DELIVERY_RECEIPT_REQUESTED'], 'No SMSC Delivery Receipt Requested'), (smpp.pdu.pdu_types.RegisteredDeliveryReceipt['SMSC_DELIVERY_RECEIPT_REQUESTED'], 'SMSC Delivery Receipt Requested'), (smpp.pdu.pdu_types.RegisteredDeliveryReceipt['SMSC_DELIVERY_RECEIPT_REQUESTED_FOR_FAILURE'], 'SMSC Delivery Receipt Requested For Failure')], default=smpp.pdu.pdu_types.RegisteredDeliveryReceipt['SMSC_DELIVERY_RECEIPT_REQUESTED'], help_text='Request SMSC delivery receipt'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='replace_if_present_flag',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.ReplaceIfPresentFlag['DO_NOT_REPLACE'], 'Do not replace'), (smpp.pdu.pdu_types.ReplaceIfPresentFlag['REPLACE'], 'Replace')], default=smpp.pdu.pdu_types.ReplaceIfPresentFlag['DO_NOT_REPLACE'], help_text='Replace if present flag'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='source_addr_npi',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrNpi['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrNpi['ISDN'], 'ISDN'), (smpp.pdu.pdu_types.AddrNpi['DATA'], 'Data'), (smpp.pdu.pdu_types.AddrNpi['TELEX'], 'Telex'), (smpp.pdu.pdu_types.AddrNpi['LAND_MOBILE'], 'Land Mobile'), (smpp.pdu.pdu_types.AddrNpi['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrNpi['PRIVATE'], 'Private'), (smpp.pdu.pdu_types.AddrNpi['ERMES'], 'Ermes'), (smpp.pdu.pdu_types.AddrNpi['INTERNET'], 'Internet'), (smpp.pdu.pdu_types.AddrNpi['WAP_CLIENT_ID'], 'WAP Client ID')], default=smpp.pdu.pdu_types.AddrNpi['ISDN'], help_text='Source address NPI'),
        ),
        migrations.AlterField(
            model_name='jasminsmppconnector',
            name='source_addr_ton',
            field=models.IntegerField(choices=[(smpp.pdu.pdu_types.AddrTon['UNKNOWN'], 'Unknown'), (smpp.pdu.pdu_types.AddrTon['INTERNATIONAL'], 'International'), (smpp.pdu.pdu_types.AddrTon['NATIONAL'], 'National'), (smpp.pdu.pdu_types.AddrTon['NETWORK_SPECIFIC'], 'Network Specific'), (smpp.pdu.pdu_types.AddrTon['SUBSCRIBER_NUMBER'], 'Subscriber Number'), (smpp.pdu.pdu_types.AddrTon['ALPHANUMERIC'], 'Alphanumeric'), (smpp.pdu.pdu_types.AddrTon['ABBREVIATED'], 'Abbreviated')], default=smpp.pdu.pdu_types.AddrTon['NATIONAL'], help_text='Source address TON'),
        ),
    ]
