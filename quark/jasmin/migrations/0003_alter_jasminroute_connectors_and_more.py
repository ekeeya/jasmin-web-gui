# Generated by Django 5.0.11 on 2025-05-06 14:16

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('jasmin', '0002_initial'),
    ]

    operations = [
        migrations.AlterField(
            model_name='jasminroute',
            name='connectors',
            field=models.ManyToManyField(help_text='Connectors for the route.', to='jasmin.jasminsmppconnector'),
        ),
        migrations.AlterField(
            model_name='jasminroute',
            name='filters',
            field=models.ManyToManyField(help_text='Filters applied to the route.', to='jasmin.jasminfilter'),
        ),
        migrations.AlterField(
            model_name='jasminroute',
            name='router_type',
            field=models.CharField(choices=[('DefaultRoute', 'Default route'), ('StaticMTRoute', 'Static MTRoute'), ('RandomRoundrobinMTRoute', 'Random Roundrobin MTRoute'), ('FailoverMTRoute', 'Failover MTRoute')], default='DefaultRoute', help_text='Type of router for message routing.', max_length=25),
        ),
        migrations.CreateModel(
            name='JasminInterceptor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature', models.CharField(choices=[('MO', 'MO'), ('MT', 'MT')], max_length=2)),
                ('interceptor_type', models.CharField(choices=[('DefaultInterceptor', 'An interceptor without a filter, this one can only set with the lowest order to be a default/fallback interceptor'), ('StaticMOInterceptor', 'A basic interceptor with Filters and one Script'), ('StaticMTInterceptor', 'A basic interceptor with Filters and one Script')], default='DefaultInterceptor', max_length=30)),
                ('order', models.IntegerField(unique=True)),
                ('script', models.FilePathField(help_text='Path the python script', path='/Users/ekeeya/Documents/thoth/thothComm/quark/../media/jasmin/scripts/interceptors')),
                ('filters', models.ManyToManyField(to='jasmin.jasminfilter')),
            ],
            options={
                'db_table': 'jasmin_interceptor',
            },
        ),
    ]
